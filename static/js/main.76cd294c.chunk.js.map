{"version":3,"sources":["redux/constant/quizConstant.js","components/Modal.jsx","assets/images/trophy.png","components/End.jsx","redux/action/quizAction.js","components/Question.jsx","components/Start.jsx","App.js","reportWebVitals.js","redux/reducer/quizReducer.js","redux/reducer/store.js","index.js"],"names":["QUIZ_START","QUIZ_RESET","QUIZ_NEXT","QUIZ_PREV","QUIZ_SUBMIT","Modal","show","children","showHideClassName","className","End","dispatch","useDispatch","useSelector","state","quizReducer","answers","time","useState","correctAnswers","setCorrectAnswers","modal","setModal","useEffect","correct","forEach","result","index","a","quizData","data","answer","src","Trophy","alt","srcset","length","Math","floor","onClick","style","marginLeft","type","payload","cursor","map","i","q","Question","activeQuestion","setData","error","setError","selected","setSelected","timer","setTimer","setTimeout","radiosWrapper","useRef","undefined","console","log","changeHandler","e","target","value","question","ref","choices","choice","name","onChange","checked","submitQuiz","ans","nextQuiz","findCheckedInput","current","querySelector","Start","App","step","setShowModal","clearInterval","interval","onAnswersCheck","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","reducers","persistReducer","storage","key","combineReducers","middleware","thunk","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.76cd294c.chunk.js","sourcesContent":["export const QUIZ_START = \"QUIZ_START\"\nexport const QUIZ_RESET = \"QUIZ_RESET\"\nexport const QUIZ_NEXT = \"QUIZ_NEXT\"\nexport const QUIZ_PREV = 'QUIZ_PREV'\nexport const QUIZ_SUBMIT = 'QUIZ_SUBMIT'","import React from \"react\";\n\nconst Modal = ({show , children}) => {\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n  return (\n    <div className={showHideClassName}>\n      <section className=\"modal-main\">\n        {children}\n      </section>\n    </div>\n  );\n};\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/trophy.16e6df06.png\";","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { resetQuiz } from \"../redux/action/quizAction\";\nimport { formatTime } from \"../utils\";\nimport quizData from \"../data/quiz.json\";\nimport Modal from \"./Modal\";\nimport Trophy from \"../assets/images/trophy.png\";\n\nconst End = () => {\n  const dispatch = useDispatch();\n  const { answers,time } = useSelector((state) => state.quizReducer);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [modal, setModal] = useState(false);\n  useEffect(() => {\n    let correct = 0;\n    answers.forEach((result, index) => {\n      if (result.a === quizData?.data[index].answer) {\n        correct++;\n      }\n    });\n    setCorrectAnswers(correct);\n  }, []);\n  const handleReset = () => {\n    dispatch(resetQuiz());\n  };\n  return (\n    <div className=\"endBox\">\n      <img src={Trophy} className=\"trophy\" alt=\"\" srcset=\"\" />\n      <h3>Your results</h3>\n      <p>\n        {correctAnswers} of {quizData?.data.length}\n      </p>\n      <p>\n        <strong>\n          {Math.floor((correctAnswers / quizData?.data.length) * 100)}%\n        </strong>\n      </p>\n      <p>\n        <strong>Your time:</strong> {time}sec\n      </p>\n      <section>\n        <button className=\"button\" onClick={() => setModal(true)}>\n          Check your answers\n        </button>\n        <button\n          className=\"button\"\n          style={{ marginLeft: \"20px\" }}\n          onClick={handleReset}\n        >\n          Try again\n        </button>\n      </section>\n      <Modal show={modal}>\n        <section className=\"modalBody\">\n          <header>\n            <p className=\"\">Your Answers</p>\n            <p  style={{\n              cursor: \"pointer\"\n            }} onClick={() => setModal(false)}>X</p>\n          </header>\n          <section className=\"content\">\n            <ul>\n              {answers.map((result, i) => (\n                <li key={i} className=\"mb-6\">\n                  <p>\n                    <strong>{result.q}</strong>\n                  </p>\n                  <p\n                    className={\n                      result.a === quizData?.data[i].answer\n                        ? \"bg-success\"\n                        : \"bg-danger\"\n                    }\n                  >\n                    Your answer: {result.a}\n                  </p>\n                  {result.a !== quizData?.data[i].answer && (\n                    <p className=\"bg-warning\">\n                      Correct answer: {quizData?.data[i].answer}\n                    </p>\n                  )}\n                </li>\n              ))}\n            </ul>\n          </section>\n        </section>\n      </Modal>\n    </div>\n  );\n};\n\nexport default End;\n","import {QUIZ_START,QUIZ_NEXT , QUIZ_SUBMIT, QUIZ_RESET, QUIZ_PREV} from '../constant/quizConstant' \n\nexport const startQuiz = () => dispatch =>{\n    dispatch({\n        type: QUIZ_START,\n        payload: null\n    })\n}\n\nexport const nextQuiz = ({answers}) => dispatch =>{\n    dispatch({\n        type: QUIZ_NEXT,\n        payload:answers\n    })\n}\n\nexport const prevQuiz = () =>dispatch =>{\n    dispatch({\n        type: QUIZ_PREV,\n        payload: null\n    })\n}\n\nexport const submitQuiz = ({answers,time}) => dispatch =>{\n    dispatch({\n        type: QUIZ_SUBMIT,\n        payload:{\n            answers: answers,\n            time: time\n        }\n    })\n}\n\nexport const resetQuiz = () => dispatch =>{\n    dispatch({\n        type: QUIZ_RESET,\n        payload:null\n    })\n}","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { nextQuiz, prevQuiz, submitQuiz } from \"../redux/action/quizAction\";\nimport quizData from \"../data/quiz.json\";\n\nconst Question = () => {\n  const dispatch = useDispatch();\n  const { activeQuestion, answers , time } = useSelector(\n    (state) => state?.quizReducer\n  );\n  const [data, setData] = useState(quizData?.data[activeQuestion]);\n  const [error, setError] = useState(\"\");\n  const [selected, setSelected] = useState(\"\");\n  const [timer,setTimer] = useState(time)\n  useEffect(() => {\n    if(timer > 0 )\n    {\n      setTimeout(() => setTimer(timer - 1), 1000)\n    }else{\n\n    }\n  }, [timer]);\n  const radiosWrapper = useRef();\n  useEffect(() => {\n    setData(quizData?.data[activeQuestion]);\n    if (answers[activeQuestion] != undefined) {\n      setSelected(answers[activeQuestion].a);\n      console.log(\"RUn once\");\n    }\n  }, [data, activeQuestion]);\n  const changeHandler = (e) => {\n    setSelected(e.target.value);\n    if (error) {\n      setError(\"\");\n    }\n  };\n  const handlePrev = () => {\n    setError(\"\");\n    dispatch(prevQuiz());\n  };\n  const handleNext = (e) => {\n    if (selected === \"\") {\n      return setError(\"Please select one option!\");\n    }\n    let ans = [...answers];\n    ans[activeQuestion] = {\n      q: data.question,\n      a: selected,\n    };\n    dispatch(\n      nextQuiz({\n        answers: ans,\n      })\n    );\n    setSelected(\"\");\n    const findCheckedInput =\n      radiosWrapper.current.querySelector(\"input:checked\");\n    if (findCheckedInput) {\n      findCheckedInput.checked = false;\n    }\n  };\n  const handleSubmit = () => {\n    if (selected === \"\") {\n      return setError(\"Please select one option!\");\n    }\n    dispatch(\n      submitQuiz({\n        answers: [\n          ...answers,\n          (answers[activeQuestion] = {\n            q: data.question,\n            a: selected,\n          }),\n        ],\n        time: time - timer\n      })\n    );\n  };\n  return (\n    <div className=\"questionBox\">\n      <section className=\"questionHead\">\n        <h3>\n          Question {activeQuestion + 1}/{quizData?.data.length}\n        </h3>\n        <h5>{timer}</h5>\n      </section>\n      <section className=\"middleBox\" >\n        <div className=\"question\" >\n        <p>{data?.question}</p>\n        {error && <div>{error}</div>}\n        </div>\n        <div className=\"option\" ref={radiosWrapper}>\n          {data?.choices.map((choice, i) => (\n            <label className={`${choice === selected ? `selected`: `text`}`} key={i}>\n              <input\n                type=\"radio\"\n                name=\"answer\"\n                value={choice}\n                onChange={changeHandler}\n                checked={choice === selected}\n              />\n              {choice}\n            </label>\n          ))}\n        </div>\n      </section>\n        <section className=\"questionBottom\">\n          {activeQuestion <= 0 ? null : (\n            <button className=\"button\" onClick={handlePrev}>Prev</button>\n          )}\n\n          {activeQuestion + 1 >= quizData?.data.length ? (\n            <button className=\"button nextBtn\" onClick={handleSubmit}>Submit</button>\n          ) : (\n            <button className=\"button nextBtn\" onClick={handleNext}>Next</button>\n          )}\n        </section>\n    </div>\n  );\n};\n\nexport default Question;\n","import React from \"react\";\nimport { useDispatch , useSelector} from 'react-redux'\nimport { startQuiz } from \"../redux/action/quizAction\";\nconst Start = () => {\n  const dispatch = useDispatch()\n  const {time} = useSelector(state => state.quizReducer)\n  const handleQuizStart = () =>{\n    dispatch(startQuiz())\n  }\n  return (\n    <div className=\"startBox\">\n      <div >\n        <div >\n          <h1>Start the Quiz</h1>\n          <p>Good luck!</p>\n          <p>Time:&nbsp;&nbsp;{time}sec</p>\n          <button className=\"startButton\" onClick={handleQuizStart}>\n            START\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Start;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {useSelector, useDispatch} from 'react-redux'\n\nimport End from \"./components/End\";\nimport Question from \"./components/Question\";\nimport Start from \"./components/Start\";\nimport quizData from \"./data/quiz.json\";\n\n\nlet interval;\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const {step,answers} = useSelector(state => state?.quizReducer) \n  console.log(step);\n  console.log(answers);\n  const [showModal, setShowModal] = useState(false);\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    if(step === 3) {\n      clearInterval(interval);\n    }\n  }, [step]);\n  // TODO:\n  // const handleQuizStart = () => {\n  //   interval = setInterval(() => {\n  //     setTime(prevTime => prevTime + 1);\n  //   }, 1000);\n  // };\n  // const resetClickHandler = () => {\n  //   setTime(0);\n  //   setShowModal(false)\n  // }\n  return (\n    <div className=\"App\">\n      {step === 1 && <Start/>}\n      {step === 2 && <Question/>\n      }\n      {step === 3 && <End\n      data={quizData.data}\n      time={time}\n      onAnswersCheck={() => setShowModal(true)}\n      />}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {QUIZ_START , QUIZ_RESET , QUIZ_NEXT,QUIZ_SUBMIT, QUIZ_PREV} from '../constant/quizConstant'\n\nconst initialState = {\n    step : 1,\n    activeQuestion: 0,\n    answers: [],\n    time: 60\n}\n\nconst quizReducer = (state = initialState , action) =>{\n    const {type , payload} = action\n    switch (type) {\n        case QUIZ_START:\n            return {\n                ...state,step:2\n            }\n        case QUIZ_NEXT:\n            return{\n                ...state,answers: [...payload],activeQuestion: state?.activeQuestion+1\n            }\n        case QUIZ_SUBMIT:\n            return{\n                ...state,step:3,answers:[...payload?.answers] , time: payload?.time\n            }\n        case QUIZ_RESET:\n            return{\n                ...state,step:1,activeQuestion:0,answers:[], time: 60\n            }\n        case QUIZ_PREV:\n            return{\n                ...state,activeQuestion:state?.activeQuestion-1\n            }\n        default:\n            return state;\n    }\n}\n\nexport default quizReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\nimport storage from 'redux-persist/lib/storage'\nimport {persistReducer } from 'redux-persist'\n\nimport quizReducer from \"./quizReducer\";\n\nconst reducers =persistReducer({storage: storage,key:'a26' }, combineReducers({\n    quizReducer\n}));\n\nlet middleware = [];\nif (process.env.NODE_ENV === \"development\") {\n  middleware = [...middleware, thunk, logger];\n} else {\n  middleware = [...middleware, thunk];\n}\n\nexport const store = createStore(reducers, {}, applyMiddleware(...middleware));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// redux provider\nimport { Provider } from \"react-redux\"\nimport { store } from \"./redux/reducer/store\"\n// redux persist\nimport { persistStore } from \"redux-persist\"\nimport { PersistGate } from \"redux-persist/integration/react\"\n\nlet persistor = persistStore(store)\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}