{"version":3,"sources":["redux/constant/quizConstant.js","utils/index.js","components/Modal.jsx","assets/images/trophy.png","components/End.jsx","redux/action/quizAction.js","components/Question.jsx","components/Start.jsx","App.js","reportWebVitals.js","redux/reducer/quizReducer.js","redux/reducer/store.js","index.js"],"names":["QUIZ_START","QUIZ_RESET","QUIZ_NEXT","QUIZ_PREV","QUIZ_SUBMIT","formatTime","time","Math","floor","Modal","show","children","showHideClassName","className","End","dispatch","useDispatch","answers","useSelector","state","quizReducer","useState","correctAnswers","setCorrectAnswers","modal","setModal","useEffect","correct","forEach","result","index","a","quizData","data","answer","src","Trophy","alt","srcset","length","onClick","style","marginLeft","type","payload","cursor","map","i","q","Question","activeQuestion","setData","error","setError","selected","setSelected","radiosWrapper","useRef","console","log","undefined","changeHandler","e","target","value","question","ref","choices","choice","name","onChange","checked","submitQuiz","ans","nextQuiz","findCheckedInput","current","querySelector","Start","App","step","setShowModal","clearInterval","interval","onAnswersCheck","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","reducers","persistReducer","storage","key","combineReducers","middleware","thunk","store","createStore","applyMiddleware","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.f19551d8.chunk.js","sourcesContent":["export const QUIZ_START = \"QUIZ_START\"\r\nexport const QUIZ_RESET = \"QUIZ_RESET\"\r\nexport const QUIZ_NEXT = \"QUIZ_NEXT\"\r\nexport const QUIZ_PREV = 'QUIZ_PREV'\r\nexport const QUIZ_SUBMIT = 'QUIZ_SUBMIT'","const formatTime = time => {\r\n  if(time < 60) {\r\n    return time < 10 ? `0${time}s` : `${time}s`;\r\n  }else {\r\n    return Math.floor(time / 60) + 'm' + (time % 60) + 's';\r\n  }\r\n}\r\n\r\nexport {\r\n  formatTime\r\n}","import React from \"react\";\r\n\r\nconst Modal = ({show , children}) => {\r\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <section className=\"modal-main\">\r\n        {children}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/trophy.16e6df06.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { resetQuiz } from \"../redux/action/quizAction\";\r\nimport { formatTime } from \"../utils\";\r\nimport quizData from \"../data/quiz.json\";\r\nimport Modal from \"./Modal\";\r\nimport Trophy from \"../assets/images/trophy.png\";\r\n\r\nconst End = ({ time }) => {\r\n  const dispatch = useDispatch();\r\n  const { answers } = useSelector((state) => state.quizReducer);\r\n  const [correctAnswers, setCorrectAnswers] = useState(0);\r\n  const [modal, setModal] = useState(false);\r\n  useEffect(() => {\r\n    let correct = 0;\r\n    answers.forEach((result, index) => {\r\n      if (result.a === quizData?.data[index].answer) {\r\n        correct++;\r\n      }\r\n    });\r\n    setCorrectAnswers(correct);\r\n  }, []);\r\n  const handleReset = () => {\r\n    dispatch(resetQuiz());\r\n  };\r\n  return (\r\n    <div className=\"endBox\">\r\n      <img src={Trophy} className=\"trophy\" alt=\"\" srcset=\"\" />\r\n      <h3>Your results</h3>\r\n      <p>\r\n        {correctAnswers} of {quizData?.data.length}\r\n      </p>\r\n      <p>\r\n        <strong>\r\n          {Math.floor((correctAnswers / quizData?.data.length) * 100)}%\r\n        </strong>\r\n      </p>\r\n      <p>\r\n        <strong>Your time:</strong> {formatTime(time)}\r\n      </p>\r\n      <section>\r\n        <button className=\"button\" onClick={() => setModal(true)}>\r\n          Check your answers\r\n        </button>\r\n        <button\r\n          className=\"button\"\r\n          style={{ marginLeft: \"20px\" }}\r\n          onClick={handleReset}\r\n        >\r\n          Try again\r\n        </button>\r\n      </section>\r\n      <Modal show={modal}>\r\n        <section className=\"modalBody\">\r\n          <header>\r\n            <p className=\"\">Your Answers</p>\r\n            <p  style={{\r\n              cursor: \"pointer\"\r\n            }} onClick={() => setModal(false)}>X</p>\r\n          </header>\r\n          <section className=\"content\">\r\n            <ul>\r\n              {answers.map((result, i) => (\r\n                <li key={i} className=\"mb-6\">\r\n                  <p>\r\n                    <strong>{result.q}</strong>\r\n                  </p>\r\n                  <p\r\n                    className={\r\n                      result.a === quizData?.data[i].answer\r\n                        ? \"bg-success\"\r\n                        : \"bg-danger\"\r\n                    }\r\n                  >\r\n                    Your answer: {result.a}\r\n                  </p>\r\n                  {result.a !== quizData?.data[i].answer && (\r\n                    <p className=\"bg-warning\">\r\n                      Correct answer: {quizData?.data[i].answer}\r\n                    </p>\r\n                  )}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </section>\r\n        </section>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default End;\r\n","import {QUIZ_START,QUIZ_NEXT , QUIZ_SUBMIT, QUIZ_RESET, QUIZ_PREV} from '../constant/quizConstant' \r\n\r\nexport const startQuiz = () => dispatch =>{\r\n    dispatch({\r\n        type: QUIZ_START,\r\n        payload: null\r\n    })\r\n}\r\n\r\nexport const nextQuiz = ({answers}) => dispatch =>{\r\n    dispatch({\r\n        type: QUIZ_NEXT,\r\n        payload:answers\r\n    })\r\n}\r\n\r\nexport const prevQuiz = () =>dispatch =>{\r\n    dispatch({\r\n        type: QUIZ_PREV,\r\n        payload: null\r\n    })\r\n}\r\n\r\nexport const submitQuiz = ({answers}) => dispatch =>{\r\n    dispatch({\r\n        type: QUIZ_SUBMIT,\r\n        payload:answers\r\n    })\r\n}\r\n\r\nexport const resetQuiz = () => dispatch =>{\r\n    dispatch({\r\n        type: QUIZ_RESET,\r\n        payload:null\r\n    })\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { nextQuiz, prevQuiz, submitQuiz } from \"../redux/action/quizAction\";\r\nimport quizData from \"../data/quiz.json\";\r\n\r\nconst Question = () => {\r\n  const dispatch = useDispatch();\r\n  const { activeQuestion, answers } = useSelector(\r\n    (state) => state?.quizReducer\r\n  );\r\n  const [data, setData] = useState(quizData?.data[activeQuestion]);\r\n  const [error, setError] = useState(\"\");\r\n  const [selected, setSelected] = useState(\"\");\r\n  const radiosWrapper = useRef();\r\n  console.log(activeQuestion);\r\n  console.log(selected);\r\n  console.log(answers[activeQuestion]?.a);\r\n  useEffect(() => {\r\n    setData(quizData?.data[activeQuestion]);\r\n    if (answers[activeQuestion] != undefined) {\r\n      setSelected(answers[activeQuestion].a);\r\n      console.log(\"RUn once\");\r\n    }\r\n  }, [data, activeQuestion]);\r\n  const changeHandler = (e) => {\r\n    setSelected(e.target.value);\r\n    if (error) {\r\n      setError(\"\");\r\n    }\r\n  };\r\n  const handlePrev = () => {\r\n    setError(\"\");\r\n    dispatch(prevQuiz());\r\n  };\r\n  const handleNext = (e) => {\r\n    if (selected === \"\") {\r\n      return setError(\"Please select one option!\");\r\n    }\r\n    let ans = [...answers];\r\n    ans[activeQuestion] = {\r\n      q: data.question,\r\n      a: selected,\r\n    };\r\n    dispatch(\r\n      nextQuiz({\r\n        answers: ans,\r\n      })\r\n    );\r\n    setSelected(\"\");\r\n    const findCheckedInput =\r\n      radiosWrapper.current.querySelector(\"input:checked\");\r\n    if (findCheckedInput) {\r\n      findCheckedInput.checked = false;\r\n    }\r\n  };\r\n  const handleSubmit = () => {\r\n    if (selected === \"\") {\r\n      return setError(\"Please select one option!\");\r\n    }\r\n    dispatch(\r\n      submitQuiz({\r\n        answers: [\r\n          ...answers,\r\n          (answers[activeQuestion] = {\r\n            q: data.question,\r\n            a: selected,\r\n          }),\r\n        ],\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"questionBox\">\r\n      <section className=\"questionHead\">\r\n        <h3>\r\n          Question {activeQuestion + 1}/{quizData?.data.length}\r\n        </h3>\r\n        <h5>0</h5>\r\n      </section>\r\n      <section className=\"middleBox\" >\r\n        <div className=\"question\" >\r\n        <p>{data?.question}</p>\r\n        {error && <div>{error}</div>}\r\n        </div>\r\n        <div className=\"option\" ref={radiosWrapper}>\r\n          {data?.choices.map((choice, i) => (\r\n            <label className={`${choice === selected ? `selected`: `text`}`} key={i}>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"answer\"\r\n                value={choice}\r\n                onChange={changeHandler}\r\n                checked={choice === selected}\r\n              />\r\n              {choice}\r\n            </label>\r\n          ))}\r\n        </div>\r\n      </section>\r\n        <section className=\"questionBottom\">\r\n          {activeQuestion <= 0 ? null : (\r\n            <button className=\"button\" onClick={handlePrev}>Prev</button>\r\n          )}\r\n\r\n          {activeQuestion + 1 >= quizData?.data.length ? (\r\n            <button className=\"button nextBtn\" onClick={handleSubmit}>Submit</button>\r\n          ) : (\r\n            <button className=\"button nextBtn\" onClick={handleNext}>Next</button>\r\n          )}\r\n        </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import React from \"react\";\r\nimport { useDispatch} from 'react-redux'\r\nimport { startQuiz } from \"../redux/action/quizAction\";\r\nconst Start = () => {\r\n  const dispatch = useDispatch()\r\n  const handleQuizStart = () =>{\r\n    dispatch(startQuiz())\r\n  }\r\n  return (\r\n    <div className=\"startBox\">\r\n      <div >\r\n        <div >\r\n          <h1>Start the Quiz</h1>\r\n          <p>Good luck!</p>\r\n          <button className=\"startButton\" onClick={handleQuizStart}>\r\n            START\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Start;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {useSelector, useDispatch} from 'react-redux'\n\nimport End from \"./components/End\";\nimport Question from \"./components/Question\";\nimport Start from \"./components/Start\";\nimport quizData from \"./data/quiz.json\";\n\n\nlet interval;\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const {step,answers} = useSelector(state => state?.quizReducer) \n  console.log(step);\n  console.log(answers);\n  const [showModal, setShowModal] = useState(false);\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    if(step === 3) {\n      clearInterval(interval);\n    }\n  }, [step]);\n  // TODO:\n  // const handleQuizStart = () => {\n  //   interval = setInterval(() => {\n  //     setTime(prevTime => prevTime + 1);\n  //   }, 1000);\n  // };\n  // const resetClickHandler = () => {\n  //   setTime(0);\n  //   setShowModal(false)\n  // }\n  return (\n    <div className=\"App\">\n      {step === 1 && <Start/>}\n      {step === 2 && <Question/>\n      }\n      {step === 3 && <End\n      data={quizData.data}\n      time={time}\n      onAnswersCheck={() => setShowModal(true)}\n      />}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {QUIZ_START , QUIZ_RESET , QUIZ_NEXT,QUIZ_SUBMIT, QUIZ_PREV} from '../constant/quizConstant'\r\n\r\nconst initialState = {\r\n    step : 1,\r\n    activeQuestion: 0,\r\n    answers: [],\r\n    time: 0\r\n}\r\n\r\nconst quizReducer = (state = initialState , action) =>{\r\n    const {type , payload} = action\r\n    switch (type) {\r\n        case QUIZ_START:\r\n            return {\r\n                ...state,step:2\r\n            }\r\n        case QUIZ_NEXT:\r\n            return{\r\n                ...state,answers: [...payload],activeQuestion: state?.activeQuestion+1\r\n            }\r\n        case QUIZ_SUBMIT:\r\n            return{\r\n                ...state,step:3,answers:[...payload]\r\n            }\r\n        case QUIZ_RESET:\r\n            return{\r\n                ...state,step:1,activeQuestion:0,answers:[]\r\n            }\r\n        case QUIZ_PREV:\r\n            return{\r\n                ...state,activeQuestion:state?.activeQuestion-1\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default quizReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {persistReducer } from 'redux-persist'\r\n\r\nimport quizReducer from \"./quizReducer\";\r\n\r\nconst reducers =persistReducer({storage: storage,key:'a23' }, combineReducers({\r\n    quizReducer\r\n}));\r\n\r\nlet middleware = [];\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middleware = [...middleware, thunk, logger];\r\n} else {\r\n  middleware = [...middleware, thunk];\r\n}\r\n\r\nexport const store = createStore(reducers, {}, applyMiddleware(...middleware));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// redux provider\nimport { Provider } from \"react-redux\"\nimport { store } from \"./redux/reducer/store\"\n// redux persist\nimport { persistStore } from \"redux-persist\"\nimport { PersistGate } from \"redux-persist/integration/react\"\n\nlet persistor = persistStore(store)\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}